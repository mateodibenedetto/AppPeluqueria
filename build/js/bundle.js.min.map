{"version":3,"sources":["app.js"],"names":["pagina","cita","nombre","fecha","hora","servicios","document","addEventListener","iniciarApp","mostrarServicios","mostrarSeccion","cambiarSeccion","paginaSiguiente","paginaAnterior","botonesPaginador","mostrarResumen","nombreCita","fechaCita","deshabilitarFechaAnterior","horaCita","seccionAnterior","querySelector","classList","remove","add","tabAnterior","querySelectorAll","forEach","enlace","e","preventDefault","parseInt","target","dataset","paso","async","resultado","fetch","db","json","servicio","id","precio","nombreServicio","createElement","textContent","precioServicio","servicioDiv","idServicio","onclick","seleccionarServicio","appendChild","error","console","log","elemento","tagName","parentElement","contains","eliminarServicio","servicioObj","firstElementChild","nextElementSibling","agregarServicio","filter","obj","resumenDiv","firstChild","removeChild","Object","values","includes","noServicios","headingCita","innerHTML","serviciosCita","headingServicios","cantidad","contenedorServicio","textoServicio","totalServicio","split","trim","cantidadPagar","nombreTexto","value","length","mostrarAlerta","alerta","mensaje","tipo","setTimeout","fechaInput","Date","getUTCDay","inputFecha","fechaAhora","fechaDeshabilitar","getFullYear","getMonth","getDate","min","inputHora"],"mappings":"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","file":"bundle.js","sourcesContent":["let pagina = 1; // es el primer tab\r\n\r\nconst cita = {\r\n    nombre: '',\r\n    fecha: '',\r\n    hora: '',\r\n    servicios: []\r\n}\r\n\r\n// ** Cuando se cargue la pagina se va a ejecutar la funcion iniciarApp\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    iniciarApp();\r\n});\r\n\r\n\r\n// ** IniciarApp llama a todas las funciones\r\nconst iniciarApp = () => {\r\n    mostrarServicios();\r\n\r\n    // Resalta el div actual segun al tab que se presiona\r\n    mostrarSeccion();\r\n    // Oculta o muestra una seccion segun al tab que se presiona\r\n    cambiarSeccion();\r\n\r\n    // Paginacion siguinete y anterior\r\n    paginaSiguiente();\r\n    paginaAnterior();\r\n\r\n    // Comprueba la pagina actual para ocultar o mostrar la paginacion\r\n    botonesPaginador();\r\n\r\n    // Muestra el resumen de la cita (o mensaje de eerror en caso de que le falte seleccionar algo)\r\n    mostrarResumen();\r\n\r\n    // Almacena el nombre de la cita en el objeto\r\n    nombreCita();\r\n\r\n    // Almacena fecha de la cita en el objeto\r\n    fechaCita();\r\n\r\n    // Deshabilta fechas anteriores en el calendario\r\n    deshabilitarFechaAnterior();\r\n\r\n    // Almacena la hora de la cita en el objeto\r\n    horaCita();\r\n}\r\n\r\n\r\n// ** Muestra la seccion\r\nconst mostrarSeccion = () => {\r\n\r\n    // Eliminar la clase mostrar-seccion de la seccion anterior\r\n    const seccionAnterior = document.querySelector('.mostrar-seccion');\r\n    if( seccionAnterior ) {\r\n       seccionAnterior.classList.remove('mostrar-seccion');\r\n    }\r\n\r\n    const seccionActual = document.querySelector(`#paso-${pagina}`); // #paso-${pagina} es la pagina actual y se actualiza segun cambiemos\r\n    seccionActual.classList.add('mostrar-seccion');\r\n\r\n     // Elimina la clase de actual en el tab anterior\r\n    const tabAnterior = document.querySelector('.tabs .actual');\r\n\r\n    if(tabAnterior) {\r\n        tabAnterior.classList.remove('actual');\r\n    }\r\n   \r\n    // Resalta el Tab actual\r\n    const tab = document.querySelector(`[data-paso=\"${pagina}\"]`);\r\n    tab.classList.add('actual');\r\n}\r\n\r\n\r\n// ** Cambia de seecion segun en el tab que estemos\r\nconst cambiarSeccion = () => {\r\n    const enlaces = document.querySelectorAll('.tabs button');\r\n\r\n    // Iteramos sobre cada enlace\r\n    enlaces.forEach( enlace => {\r\n        enlace.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            pagina = parseInt(e.target.dataset.paso); // convierte el valor del enlace que esta en string a un entero\r\n\r\n            // Llamar a la funcion mostrar seccion\r\n            mostrarSeccion();\r\n            botonesPaginador();\r\n        });\r\n    });\r\n}\r\n\r\n\r\n// ** Muestra los servicios en el HTML con fetch\r\nasync function mostrarServicios() {\r\n    try {\r\n        const resultado = await fetch('./servicios.json');\r\n        const db = await resultado.json(); // en fetch hay que indicar el tipo de respuesta, en este caso es tipo json\r\n        \r\n        const { servicios } = db; // crea la variable db y va a estraer el contenido de servicios a la variable db\r\n\r\n        // Generar HTML\r\n        servicios.forEach( servicio => { // el forEach va a iterar sobre cada servicio del archivo json\r\n            const { id, nombre, precio } = servicio; // extrae los id, nombres y precios a la variable servicio. Para no tener que andar poniendo servicio.id, servicio.nombre etc...\r\n\r\n            // DOM Scripting\r\n            const nombreServicio = document.createElement('P');\r\n            nombreServicio.textContent = nombre; // se va a crear un p con el contenido de nombre del archivo json\r\n            nombreServicio.classList.add('nombre-servicio');\r\n\r\n            // Generar precio del servicio\r\n            const precioServicio = document.createElement('P');\r\n            precioServicio.textContent = `$ ${precio}`;\r\n            precioServicio.classList.add('precio-servicio');\r\n\r\n            // Generar div contenedor de servicio\r\n            const servicioDiv = document.createElement('DIV');\r\n            servicioDiv.classList.add('servicio');\r\n            servicioDiv.dataset.idServicio = id;\r\n\r\n            // Selecciona un servicio para la cita\r\n            servicioDiv.onclick = seleccionarServicio; // no se usa addEvent Listener por que al div lo estamos creando\r\n\r\n\r\n            // Inyectar precio y nombre al div de servicio\r\n            servicioDiv.appendChild(nombreServicio); // añade la clase de nombre-servicio dentro de la clase servicio\r\n            servicioDiv.appendChild(precioServicio); \r\n\r\n\r\n            // Inyectar en HTMl\r\n            document.querySelector('#servicios').appendChild(servicioDiv); // agrega la clase servicioDiv al HTML dentro de un ID\r\n        } );\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\n// ** Funcion para seleccionar los servicios\r\nconst seleccionarServicio = (e) => {\r\n\r\n    let elemento;\r\n\r\n    // Forzar que el elemento al cual le demos click sea el DIV\r\n    if(e.target.tagName === 'P') { // si doy click en el parrafo forzo a js a ir hacia el div\r\n        elemento = e.target.parentElement; // parentElement en este caso es el div\r\n    } else {\r\n        elemento = e.target; // pero si damos click en el div no pasa nada\r\n    }\r\n    \r\n    // si le doy click al div y ya contiene la clase de seleccionado se va a remover\r\n    if(elemento.classList.contains('seleccionado')) { \r\n        elemento.classList.remove('seleccionado');\r\n\r\n        const id = parseInt(elemento.dataset.idServicio);\r\n\r\n        eliminarServicio(id);\r\n    } else {\r\n        elemento.classList.add('seleccionado'); // si no se la va a agregar\r\n\r\n        const servicioObj = {\r\n            id: parseInt( elemento.dataset.idServicio ), // selecciona el servicio\r\n            nombre: elemento.firstElementChild.textContent, // selecciona el nombre\r\n            precio: elemento.firstElementChild.nextElementSibling.textContent //  selecciona el precio\r\n        }\r\n\r\n        // console.log(servicioObj)\r\n        agregarServicio(servicioObj);\r\n    }\r\n}\r\n\r\n// ** Elimina el servicio\r\nconst eliminarServicio = (id) => {\r\n    const { servicios } = cita;\r\n    cita.servicios = servicios.filter( servicio => servicio.id !== id ); // al eliminar un servicio trae el anterior seleccionado\r\n    console.log(cita);\r\n}\r\n\r\n// ** Agrega el servicio\r\nconst agregarServicio = (obj) => {\r\n    const { servicios } = cita;\r\n    // toma una copia de un array o objeto, crea uno nuevo y lo agrega a cita.servicios\r\n    cita.servicios = [...servicios, obj];\r\n\r\n    console.log(cita);\r\n}\r\n\r\n// ** Paginacion\r\nconst paginaSiguiente = () => {\r\n    const paginaSiguiente = document.querySelector('#siguiente');\r\n    paginaSiguiente.addEventListener('click', ()=> {\r\n        pagina++;\r\n\r\n        botonesPaginador();\r\n    });\r\n}\r\n\r\nconst paginaAnterior = () => {\r\n    const paginaAnterior = document.querySelector('#anterior');\r\n    paginaAnterior.addEventListener('click', ()=> {\r\n        pagina--;\r\n\r\n        botonesPaginador();\r\n    });\r\n}\r\n\r\n// ** Boton paginador\r\nconst botonesPaginador = () => {\r\n    const paginaSiguiente = document.querySelector('#siguiente');\r\n    const paginaAnterior = document.querySelector('#anterior');\r\n\r\n    if(pagina === 1) {\r\n        paginaAnterior.classList.add('ocultar');\r\n    } else if(pagina === 3) {\r\n        paginaSiguiente.classList.add('ocultar');\r\n        paginaAnterior.classList.remove('ocultar');\r\n\r\n        mostrarResumen(); // Estamos en la pag 3, carga el resumen de la cita\r\n    } else {\r\n        paginaAnterior.classList.remove('ocultar');\r\n        paginaSiguiente.classList.remove('ocultar');\r\n    }\r\n\r\n    // Cambia la seccion\r\n    mostrarSeccion();     \r\n}\r\n\r\n// ** Funcion para mostrar el resumen\r\nconst mostrarResumen = () => {\r\n    // Destructuting\r\n    const { nombre, fecha, hora, servicios } = cita; // va a extraer todo lo que esta dentro de los {} dentro de cita\r\n\r\n    // Seleccionar el resumen\r\n    const resumenDiv = document.querySelector('.contenido-resumen');\r\n\r\n    // Limpia el HTML previo\r\n    while( resumenDiv.firstChild ) {\r\n        resumenDiv.removeChild( resumenDiv.firstChild );\r\n    }\r\n\r\n    // Validacion de objeto\r\n    if(Object.values(cita).includes('')) { // si los campos de la cita estan vacios\r\n        const noServicios = document.createElement('P');\r\n        noServicios.textContent = 'Faltan datos de Servicios, hora, fecha o nombre';\r\n\r\n        noServicios.classList.add('invalidar-cita');\r\n\r\n        // agregar a resumenDiv\r\n        resumenDiv.appendChild(noServicios);\r\n\r\n        return;\r\n    } \r\n\r\n    const headingCita = document.createElement('H3');\r\n    headingCita.textContent = 'Resumen Turno';\r\n\r\n    // Mostrar en resumenn\r\n    const nombreCita = document.createElement('P');\r\n    nombreCita.innerHTML = `<span>Nombre</span>: ${nombre}`;\r\n\r\n    const fechaCita = document.createElement('P');\r\n    fechaCita.innerHTML = `<span>Fecha</span>: ${fecha}`;\r\n\r\n    const horaCita = document.createElement('P');\r\n    horaCita.innerHTML = `<span>Hora</span>: ${hora}`;\r\n\r\n    const serviciosCita = document.createElement('DIV');\r\n    serviciosCita.classList.add('resumen-servicios');\r\n\r\n    const headingServicios = document.createElement('H3');\r\n    headingServicios.textContent = 'Resumen de Servicios';\r\n\r\n    serviciosCita.appendChild(headingServicios);\r\n\r\n\r\n    let cantidad = 0; // creamos una variable para ir almacenando la suma de los servicios, fuera del forEach\r\n\r\n    // Iterar sobre el arreglo de servicios\r\n    servicios.forEach( servicio => {\r\n\r\n        const { nombre, precio } = servicio;\r\n        const contenedorServicio = document.createElement('DIV');\r\n        contenedorServicio.classList.add('contenedor-servicio');\r\n\r\n        const textoServicio = document.createElement('P'); // crea un texto con el nombre del servicio\r\n        textoServicio.textContent = nombre;\r\n\r\n        const precioServicio = document.createElement('P'); // crea un texto con el precio del servicio\r\n        precioServicio.textContent = precio;\r\n        precioServicio.classList.add('precio');\r\n\r\n        const totalServicio = precio.split('$'); // le quita el signo de dolar\r\n        // console.log(parseInt( totalServicio[1].trim() )); // .trim elimina los espacione n blanco\r\n\r\n        cantidad += parseInt( totalServicio[1].trim()); // suma los servicios\r\n\r\n        // Colocar precio y texto en el DIV\r\n        contenedorServicio.appendChild(textoServicio);\r\n        contenedorServicio.appendChild(precioServicio);\r\n\r\n        serviciosCita.appendChild(contenedorServicio);\r\n    })\r\n\r\n\r\n    resumenDiv.appendChild(headingCita);\r\n    resumenDiv.appendChild(nombreCita);\r\n    resumenDiv.appendChild(fechaCita);\r\n    resumenDiv.appendChild(horaCita);\r\n    resumenDiv.appendChild(serviciosCita);\r\n\r\n    const cantidadPagar = document.createElement('P');\r\n    cantidadPagar.classList.add('total');\r\n    cantidadPagar.innerHTML = `<span>Total a Pagar: </span> $ ${cantidad}`;\r\n\r\n    resumenDiv.appendChild(cantidadPagar);\r\n\r\n}\r\n\r\n// ** Validacion del nombre de la cita\r\nconst nombreCita = () => {\r\n    const nombreInput = document.querySelector('#nombre');\r\n\r\n    nombreInput.addEventListener('input', e => { // el envento input se va ejecutar cada vez que se escriba dentro del input\r\n        const nombreTexto = e.target.value.trim(); // trim eliminalos espacios en blanco\r\n\r\n        // Validacion para que el campo de nombre tenga algo\r\n        if( nombreTexto === '' || nombreTexto.length < 3) {\r\n            mostrarAlerta('Nombre no valido', 'error');\r\n        } else {\r\n            const alerta = document.querySelector('.alerta');\r\n            // si insertamos algo valido en el campo antes de que se vaya la alerta, entonces sacarla\r\n            if( alerta ) {\r\n                alerta.remove();\r\n            }\r\n            cita.nombre = nombreTexto;\r\n        }\r\n    });\r\n}\r\n\r\n// Mostrar alerta de error si el campo no esta lleno\r\nconst mostrarAlerta = (mensaje, tipo) => {\r\n\r\n    // Si hay una alerta de error previa, entonce nop crear otra\r\n    const alertaPrevia = document.querySelector('.alerta');\r\n    if(alertaPrevia) {\r\n        return; // detiene la ejecucion del codigo\r\n    }\r\n\r\n    // Crea la alerta\r\n    const alerta = document.createElement('DIV');\r\n    alerta.textContent = mensaje;\r\n    alerta.classList.add('alerta');\r\n\r\n    if( tipo === 'error') {\r\n        alerta.classList.add('error');\r\n    }\r\n\r\n    // insertar en el HTML\r\n    const formulario = document.querySelector('.formulario');\r\n    formulario.appendChild(alerta);\r\n\r\n    // Eliminar la alerta despues de 3 segundos\r\n    setTimeout(() => {\r\n        alerta.remove();\r\n    }, 3000)\r\n}\r\n\r\n\r\n// ** Validacion de la fecha de la cita\r\nconst fechaCita = () => {\r\n    const fechaInput = document.querySelector('#fecha');\r\n    fechaInput.addEventListener('input', e => {\r\n\r\n        const fecha = new Date(e.target.value).getUTCDay(); // UTCday devuelve los dias de la semana como numeros del 0 al 6\r\n\r\n        if([0,6].includes(fecha)) {\r\n            e.preventDefault();\r\n            fechaInput.value = ''; // para cuando pong auna fecha no valida vuelva a resetearse el input\r\n            mostrarAlerta('Fines de semana cerrado', 'error');\r\n        } else {\r\n            // si insertamos algo valido en el campo antes de que se vaya la alerta, entonces sacarla\r\n            const alerta = document.querySelector('.alerta');\r\n            if( alerta ) {\r\n                alerta.remove();\r\n            }\r\n\r\n            cita.fecha = fechaInput.value; // añade la fecha al objeto de cita\r\n\r\n        }\r\n    })\r\n}\r\n\r\n// ** Funcion para deshabilitar fechas anteriores en el input de fecha\r\nconst deshabilitarFechaAnterior = () => {\r\n    const inputFecha = document.querySelector('#fecha');\r\n\r\n    const fechaAhora = new Date(); // fecha actual\r\n    const year = fechaAhora.getFullYear();\r\n    const mes = fechaAhora.getMonth() + 1;\r\n    const dia = fechaAhora.getDate() + 1;\r\n    const fechaDeshabilitar = `${year}-${mes}-${dia}`;\r\n\r\n    inputFecha.min = fechaDeshabilitar;\r\n}\r\n\r\n\r\n// ** Funcion para deshabilitar horas invalidas en el input de date\r\n\r\nconst horaCita = () => {\r\n    const inputHora = document.querySelector('#hora');\r\n    inputHora.addEventListener('input', e => {\r\n        const horaCita = e.target.value;\r\n        const hora = horaCita.split(':'); // dividi la hora y los minutos\r\n\r\n        if(hora[0] <= 8 || hora[0] >= 18) {\r\n            mostrarAlerta('Hora no valida', 'error');\r\n            setTimeout(() => {\r\n                inputHora.value = '';\r\n            },2000)\r\n        } else {\r\n            cita.hora = horaCita; // agrega la hora al objeto de cita\r\n        }\r\n    })\r\n}"]}